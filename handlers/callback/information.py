from aiogram import F
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery

from config import database
from handlers.callback import callback_router
from keyboards.inline.infrormation_kb import information_kb
from utils.translator import translate


@callback_router.callback_query(F.data == "information")
@database.update_activity
async def information_callback(callback: CallbackQuery, state: FSMContext) -> None:
    strings: dict[str, dict] = {
        "information": {
            "ru": f"$INCH - –∂–µ—Ç–æ–Ω , –≤—ã–ø—É—â–µ–Ω–Ω—ã–π –≤ —Å–µ—Ç–∏ TON. –ï–≥–æ —Ü–µ–ª—å - –ø—Ä–∏–≤–ª–µ—á—å –∞—É–¥–∏—Ç–æ—Ä–∏—é –≤ –ø—Ä–æ–µ–∫—Ç, –∫–æ—Ç–æ—Ä–∞—è –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º "
                  f"—Å—Ç–∞–Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ Independent Chain. –í—Å–µ–≥–æ –±—ã–ª–æ –≤—ã–ø—É—â–µ–Ω–æ 10,000,000 $INCH üí∏\n\n"
                  f"–ë–∞–ª–∞–Ω—Å –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤ $tINCH - –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è –≤–∞–ª—é—Ç–∞ –±–æ—Ç–∞ –∫–æ—Ç–æ—Ä–∞—è –≤ –ø–æ—Å–ª–µ–¥—É—é—â–µ–º "
                  f"–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±—É–¥–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –≤ $INCH üîÑ\n\n"
                  f"–î–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –ø—Ä–æ–µ–∫—Ç–æ–º Independent Chain "
                  f"—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å Whitepaper –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ.",
            "en": f"$INCH is a token issued on the TON network. His goal is to attract an audience to the project, which "
                  f"will later become members of the Independent Chain. A total of 10,000,000 $INCH was issued üí∏\n\n"
                  f"The balance of your profile is calculated in $tINCH - the internal currency of the bot, "
                  f"which will later be automatically converted to $INCH üîÑ\n\n"
                  f"For a more detailed acquaintance with the Independent Chain project, we recommend that you "
                  f"read the project Whitepaper at the link below."
        }
    }

    await callback.answer(show_alert=False)
    await callback.message.edit_text(
        text=translate(callback, strings["information"]),
        reply_markup=information_kb(callback)
    )
    return None
