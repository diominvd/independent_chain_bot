from aiogram import F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery

from config import database
from handlers.callback import callback_router
from keyboards.inline.event_kb import event_kb
from keyboards.inline.events_kb import events_kb
from keyboards.inline.wallet_kb import wallet_kb
from states import BotStates, EventsStates
from utils.translator import translate


@callback_router.callback_query(StateFilter(EventsStates.events_menu), F.data == "raffle_nft")
@database.update_activity
async def raffle_nft__callback(callback: CallbackQuery, state: FSMContext) -> None:
    await state.set_state(EventsStates.raffle_nft)
    strings: dict[str, dict] = {
        "event_description": {
            "ru": f"–ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω–∫—É—Ä—Å –Ω–∞ –ø–µ—Ä–≤—É—é –ø–∞—Ä—Ç–∏—é NFT –æ—Ç Independent Chain üíé\n\n"
                  f"–í—Å–µ–≥–æ –±—É–¥–µ—Ç 5 –ø—Ä–∏–∑–æ–≤—ã—Ö –º–µ—Å—Ç:\n\n"
                  f"1Ô∏è‚É£ –ú–µ—Å—Ç–æ - 1000 $tINCH\n"
                  f"2Ô∏è‚É£ –ú–µ—Å—Ç–æ - –°–µ—Ä–µ–±—Ä—è–Ω–Ω–∞—è NFT\n"
                  f"3Ô∏è‚É£ –ú–µ—Å—Ç–æ - –ó–æ–ª–æ—Ç–∞—è NFT\n"
                  f"4Ô∏è‚É£ –ú–µ—Å—Ç–æ - –ë—Ä–æ–Ω–∑–æ–≤–∞—è NFT\n"
                  f"5Ô∏è‚É£ –ú–µ—Å—Ç–æ - 500 $tINCH\n\n"
                  f"–ù–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏ –±–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–æ–ø-5 –±–µ–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –∏–º—ë–Ω. –ü—Ä–æ—Å—Ç–æ —Ü–∏—Ñ—Ä—ã.\n\n"
                  f"–ú–µ—Å—Ç–∞ –±—É–¥—É—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∏—Å—Ö–æ–¥—è –∏–∑ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –≤–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏.",
            "en": f"We are launching a competition for the first batch of NFT from Independent Chain üíé\n\n"
                  f"There will be 5 prizes in total:\n\n"
                  f"1Ô∏è‚É£ Place - 1000 $tINCH\n"
                  f"2Ô∏è‚É£ Place - Silver NFT\n"
                  f"3Ô∏è‚É£ Place - Gold NFT\n"
                  f"4Ô∏è‚É£ Place - Bronze NFT\n"
                  f"5Ô∏è‚É£ Place - 500 $tINCH\n\n"
                  f"Several times a day, the bot will send the top 5 without any names. Just numbers.\n\n"
                  f"Places will be distributed based on the number of users you invited. We wish you good luck."
        }
    }

    await callback.answer(show_alert=False)
    await callback.message.edit_text(
        text=translate(callback, strings["event_description"]),
        reply_markup=event_kb(callback)
    )
    return None